#!/usr/bin/env bash

PULL=no
for arg in "$@"; do
    if [[ "${arg}" == -* ]]; then
        if [[ "${arg}" == --pull ]]; then
            pull=yes
            break
        fi
    else
        break
    fi
done


###########################################################
## Common content with ../doc/minimalproj/build_docker.sh
## Use this version as reference.

function find-latest-mini-local {
    local name=zppz/mini

    local tag=$(docker images "${name}" --format "{{.Tag}}" | sort | tail -n 1) || return 1
    if [[ "${tag}" == '' ]]; then
        echo -
    else
        echo "${name}:${tag}"
    fi
}


function find-latest-mini {
    local name=zppz/mini

    local localimg=$(find-latest-mini-local) || return 1

    local url=https://hub.docker.com/v2/repositories/${name}/tags
    local tags="$(curl -L -s ${url} | tr -d '{}[]"' | tr ',' '\n' | grep name)" || return 1
    if [[ "$tags" == "" ]]; then
        remoteimg=-
    else
        local tags="$(echo $tags | sed 's/name: //g' | sed 's/results: //g')" || return 1
        local tag=$(echo "${tags}" | tr ' ' '\n' | sort -r | head -n 1) || return 1
        remoteimg="${name}:${tag}"
    fi

    if [[ "${localimg}" == - ]]; then
        echo "${remoteimg}"
    elif [[ "${remoteimg}" == - ]]; then
        echo "${localimg}"
    elif [[ "${localimg}" < "${remoteimg}" ]]; then
        echo "${remoteimg}"
    else
        echo "${localimg}"
    fi
}


## End of common content.
#############################


if [[ "${PULL}" == yes ]]; then
    IMG="$(find-latest-mini)" || exit 1
else
    IMG="$(find-latest-mini-local)" || exit 1
fi
if [[ "${IMG}" == - ]]; then
    echo "Unable to find image 'mini'"
    exit 1
fi

cmd="$(docker run --rm ${IMG} make-docker-runner)" || exit 1
bash -c "${cmd}" -- $@