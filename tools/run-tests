#!/bin/bash

# This script is run by the release script in `./run`. Typically, user does not run this directly.
# They would just use `py.test` to run tests.

# Run this script in the root dir of the repo within the container launched by `./run`.
# Repo needs to make sure these dependencies are installed:
#
#   pytest, and any pytest plugins that are needed


set -e
thisdir="$(pwd)"

if [ -z "${PKG}" ]; then
    # Infer the package name.
    # This is the name of the package code directory under `src/`, also the "import" name.
    # This does not need to be the "project" name defined in `pyproject.toml`, which is for `pypi` and `pip`,
    # related to install/uninstall.
    rm -rf "${thisdir}/src"/*egg-info  # these could have been created during package build
    pkg="$(ls "${thisdir}"/src/)"
    if [[ "${pkg}" == '' || $pkg = *' '* ]]; then  # zero or multiple subdirectories
        >&2 echo "unable to infer package name"
        exit 1
    fi
    PKG=${pkg%/}  # remove '/' at the end
fi

SRC="${thisdir}"/src/${PKG}
TESTS="${thisdir}"/tests


python3 -m pip install -U ruff mypy || true


echo
echo --- running ruff ---
echo
python3 -m ruff --no-cache ${SRC} ${TESTS}


echo
echo --- running mypy ---
echo
# python -m mypy --show-error-codes --disable-error-code import ${SRC} || true
python3 -m mypy ${SRC} || true  # MyPy errors do not halt this script


echo
echo --- running tests ---
echo
py.test --cov=${SRC} ${TESTS}
# coverage run --source="${thisdir}/src" -m pytest -n auto ${TESTS}
# coverage report -m
# Test coverage target is specified in `pyproject.toml`.
